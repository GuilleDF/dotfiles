import json

f = open('gramatica.txt','r')
rules = {}
for line in f:
    line = line.replace("\n","")
    parts = line.split(" -> ")
#    print(parts)
    p2 = parts[1].split("|")
    i=0
    for p in p2:
        p2[i] = p.split(" ")
        p2[i] = [val for val in p2[i] if val != "" and val != "lambda"] # remove "" and "lambda"
        i+=1
    rules[parts[0].replace(" ","")] = p2
#print(rules)
f.close()


def cierre(items):
    result = dict(items)
    aux = dict(items)

    explored = []
    aux_explored = []
    done_something = True
    while(done_something):
        done_something = False
        for key in result:
            if(key in explored):
                continue
            aux_explored.append(key)
            for item in result[key]:
                index = item.index(".") + 1
                if(index < len(item) and item[index].isupper()):
                    for rule in rules[item[index]]:
                        r = list(rule)
                        r.insert(0,".")
                        if(item[index] in aux.keys()):
                            if(r not in aux[item[index]]):
                                aux[item[index]].append(r)
                                done_something = True
                                if item[index] in aux_explored:
                                    aux_explored.remove(item[index])
                        else:
                            aux[item[index]] = [r]
                            done_something = True
                        
        explored = list(aux_explored)
        result = dict(aux)
        
    return result

def goto(items, symbol):
    result = {}
    for key in items:
        for b in items[key]:
                index = b.index(".")
                if(index+1 == len(b) or b[index+1] != symbol):
                    continue
                c = list(b)
                c.remove(".")
                c.insert(index+1,".")
                if(key in result.keys()):
                    result[key].append(c)
                else:
                    result[key] = [c]
    return cierre(result)

f = open("symbols.txt","r")
symbols = []
for line in f:
    line = line.replace("\n","")
    symbols.append(line)
f.close()

def calc_collection():
    item = {}
    item["P'"] = [[".","P","eof"]]
    collection = []
    i0 = cierre(item)
    collection.append(i0)
    
    i=0
    while(i<len(collection)):
        #print("State:", i)
        #print("\t", collection[i])
        for sym in symbols:
            next_state = goto(collection[i],sym)
            if(next_state != {} and next_state not in collection):
                collection.append(next_state)
        i+=1
    jsonobject = json.dumps(collection)
    file = open(".collection","w")
    file.write(jsonobject)
    file.close()
