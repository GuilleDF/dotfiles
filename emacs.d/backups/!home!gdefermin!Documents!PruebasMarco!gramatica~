P -> B N P | F N P | N P | eof
N -> cr
Z -> cr Z | cr
B -> var T id | if ( E ) S | S | while ( E ) X { X C }
S -> id = E | return Y | write ( E ) | prompt ( id ) | id ( L )
Y -> E | lambda
T -> int | bool | chars
L -> E Q | lambda
Q -> , E Q | lambda
F -> function H id ( A ) X { X C }
X -> Z | lambda
H -> T | lambda
A -> T id K | lambda
K -> , T id K | lambda
C -> B M | lambda
M -> Z C | lambda
E -> E > R | R
R -> R + U | U
U -> ! U | id | ( E ) | id ( L ) | ct_int | ct_chars | -- id 